replicaCount: 1

image:
  repository: registry.amaze360.nl/amaze360/panorama-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: "500m"
    memory: "1Gi"
  limits:
    cpu: "4"
    memory: "8Gi"


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  data:
    enabled: false
    # storageClass: "-"
    # existingClaim: panorama-server-data
    accessMode: ReadWriteOnce
    size: 5Gi
    annotations: {}
  panoramas:
    enabled: false
    # storageClass: "-"
    # existingClaim: panorama-server-panoramas
    accessMode: ReadWriteOnce
    size: 30Gi
    annotations: {}

livenessProbe:
  enabled: false
  initialDelaySeconds: 15
  periodSeconds: 15
  failureThreshold: 60
  successThreshold: 1
  timeoutSeconds: 5

readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  failureThreshold: 60
  successThreshold: 1
  timeoutSeconds: 5

strategy:
  rollingUpdate:
    maxSurge: 1        # Example: "25%" or 1
    maxUnavailable: 1  # Example: "25%" or 1

minReadySeconds: 0

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""